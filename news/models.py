from django.db import models
from django.urls import reverse
from django.utils.text import slugify

from realside.users.models import User


class Author(models.Model):
    first_name = models.CharField(max_length=64)
    last_name = models.CharField(max_length=64)
    user = models.ForeignKey(User, on_delete=models.PROTECT)


class Article(models.Model):
    """A near copy of https://tinyurl.com/ro9olve"""
    title = models.CharField("Article Title", max_length=256)
    content = models.TextField(blank=False)
    created_date = models.DateTimeField("publish date", auto_now=True)
    modified = models.DateTimeField("modified date", auto_now=True)
    author = models.ForeignKey(Author, on_delete=models.CASCADE)
    slug = models.CharField(
        max_length=256,
        blank=True,
        editable=False,
        help_text=
        "Unique URL path to access this page. Generated by the system.")

    def get_absolute_url(self):
        """ Returns a fully-qualified path for a page (/my-new-wiki-page). """
        path_components = {"slug": self.slug}
        return reverse("home", kwargs=path_components)

    def save(self, *args, **kwargs):
        """ Creates a URL safe slug automatically when a new a page is created. """
        if not self.pk:
            self.slug = slugify(self.title, allow_unicode=True)

        # Call save on the superclass.
        return super(Article, self).save(*args, **kwargs)


class AnonymousArticle(models.Model):
    """A near copy of https://tinyurl.com/ro9olve"""
    title = models.CharField("Article Title", max_length=256)
    content = models.TextField(blank=False)
    created_date = models.DateTimeField("publish date", auto_now=True)
    slug = models.CharField(
        max_length=256,
        blank=True,
        editable=False,
        help_text=
        "Unique URL path to access this page. Generated by the system.")

    def get_absolute_url(self):
        """ Returns a fully-qualified path for a page (/my-new-wiki-page). """
        path_components = {"slug": self.slug}
        return reverse("news-article-details-page", kwargs=path_components)

    def save(self, *args, **kwargs):
        """ Creates a URL safe slug automatically when a new a page is created. """
        if not self.pk:
            self.slug = slugify(self.title, allow_unicode=True)

        # Call save on the superclass.
        return super(AnonymousArticle, self).save(*args, **kwargs)
